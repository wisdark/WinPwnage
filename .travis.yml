# https://docs.travis-ci.com/user/reference/windows
# https://docs.travis-ci.com/user/languages/python
# https://chocolatey.org/packages/python
# https://www.pyinstaller.org

# before_install: Installs Python, upgrades pip, pip installs requirements.txt
# install: Installs run-specific tools like Flake8, py2exe, PyInstaller
# before_script: Executes run-specific tools and then sets $RUN_WINPWNAGE
# script: Executes WinPwnage

os: windows      # Windows Server, version 1809 -- Platform: Windows-10-10.0.17134-SP0
language: shell  # 'language: python' is not yet supported on Travis CI Windows

env:
  global:
    - PY27PATH=/c/Python27:/c/Python27/Scripts
    - PY38PATH=/c/Python38:/c/Python38/Scripts

py27-steps: &py27-steps
  env: PATH=$PY27PATH:$PATH
  before_install:
    - choco install python2
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt

py38-steps: &py38-steps
  env: PATH=$PY38PATH:$PATH
  before_install:
    - choco install python --version 3.8.2
    - pip3 install -r requirements.txt

pyinstaller-steps: &pyinstaller-steps
  install:
    - python -m pip install pyinstaller
  before_script:
    # The next line makes a .exe that fails to write to stdout
    # - pyinstaller --onefile winpwnage.py
    # Workaround: The next three lines inexplicably build a usable .exe
    - cp main.py main_copy.py              # flip
    - pyinstaller --onefile main_copy.py
    - mv dist/main_copy.exe dist/main.exe  # flop
    - sleep 1  # Give PyInstaller a second to finish writing to stdout
    - ls -l dist  # See file size, etc.
    - RUN_WINPWNAGE=dist/main.exe

jobs:
  include:
    - name: "Py2: Run tests"
      <<: *py27-steps
    - name: "Py3: Run tests"
      <<: *py38-steps

    - name: "Py2: Build exe with PyInstaller"
      <<: *py27-steps
      <<: *pyinstaller-steps
    - name: "Py3: Build exe with PyInstaller"
      <<: *py38-steps
      <<: *pyinstaller-steps

install:
  - python -m pip install flake8

before_script:
  - flake8 . --count --select=E9,F401,F63,F72,F82 --show-source --statistics
  - RUN_WINPWNAGE="python main.py"

script:
  # Scan the function groups
  - $RUN_WINPWNAGE --scan uac
  - $RUN_WINPWNAGE --scan persist
  - $RUN_WINPWNAGE --scan elevate
